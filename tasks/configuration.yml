---
- name: change enabled_plugins file permissions
  file:
    state=touch
    path={{ rabbitmq_enabled_plugins_file_path }}
    owner={{ rabbitmq_enabled_plugins_file_owner }}
    group={{ rabbitmq_enabled_plugins_file_group }}
    mode={{ rabbitmq_enabled_plugins_file_mode }}
  changed_when: false

- name: Check if rabbitmq_conf_vm_memory_high_watermark is under the recommended range
  fail:
    msg: "The recommended vm_memory_high_watermark range is 0.4 to 0.66."
  when: rabbitmq_conf_vm_memory_high_watermark < 0.4 or rabbitmq_conf_vm_memory_high_watermark > 0.66

- name: copy the rabbitmq configuration file
  template:
    src=rabbitmq.config.j2
    dest={{ rabbitmq_config_file_path }}
    owner={{ rabbitmq_config_file_owner }}
    group={{ rabbitmq_config_file_group }}
    mode={{ rabbitmq_config_file_mode }}
    backup=yes

- name: generate rabbitmq environment-variables file
  template:
    src=rabbitmq-env.conf.j2
    dest={{ rabbitmq_env_variables_file_path }}
    owner={{ rabbitmq_config_file_owner }}
    group={{ rabbitmq_config_file_group }}
    mode={{ rabbitmq_config_file_mode }}
    backup=yes
  when: rabbitmq_conf_env is defined

- name: alter number of system's open file if rabbitmq_system_number_open_files is set
  block:
    - name: check if value is under 500k
      fail:
        msg: "The number of open files in the system should not exceed 500K."
      when: rabbitmq_system_number_open_files > 500000

    - name: make sure service.d exists
      file:
        path: "{{ rabbitmq_service_d_path }}"
        state: directory

    - name: change limit of system's number of open file
      template:
        src: limits.conf.j2
        dest: "{{ rabbitmq_service_d_path }}/limits.conf"
        backup: true
  when: rabbitmq_system_number_open_files is defined

- name: ensure rabbitmq server is running
  service:
    name: rabbitmq-server
    daemon_reload: true #changed systemd conf file
    state: started

- name: ensure rabbitmq app is started
  command: rabbitmqctl start_app

- name: create Vhost
  rabbitmq_vhost:
    name: "{{ item }}"
    state: present
  with_items: "{{ rabbitmq_vhosts }}"

- name: create users
  rabbitmq_user:
    user: "{{ item.user }}"
    password: "{{ item.password | d(omit) }}"
    permissions: "{{ item.permissions | d(omit) }}"  
    vhost: "{{ item.vhost | d(omit) }}"
    configure_priv: "{{ item.configure_priv | d(omit) }}"
    read_priv: "{{ item.read_priv | d(omit) }}"
    write_priv: "{{ item.write_priv | d(omit) }}"
    tags: "{{ item.tags | d(omit) }}"
    state: "{{ item.state | d(omit) }}"
  with_items: "{{ rabbitmq_users }}"
  run_once: true