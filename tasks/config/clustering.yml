---
- name: Check if cluster has to be enabled and cluster_name is defined
  ansible.builtin.assert:
    that:
      - rabbitmq_clustering_enabled
      - rabbitmq_clustering_cluster_name | default('', true) | length > 4
    fail_msg: "When using cluster a cluster_name must be set with at least 5 chars"
  run_once: true

- name: Set dynamic group name
  ansible.builtin.set_fact:
    cluster_group_name: "rmq_cluster_{{ rabbitmq_clustering_cluster_name }}"
  run_once: true

- name: Set dynamic group based on cluster_name
  ansible.builtin.group_by:
    key: "{{ cluster_group_name }}"
  run_once: true

- name: Show the name of master node
  ansible.builtin.debug:
    msg: "{{ groups[cluster_group_name][0] }}"
    verbosity: 2
  run_once: true

- name: Check RabbitMQ is running in cluster mode
  ansible.builtin.command: rabbitmqctl cluster_status --formatter json
  delegate_to: "{{ groups[cluster_group_name][0] }}"
  run_once: true
  changed_when: false
  register: rabbitmq_cluster_status

- name: Set rabbitmq_cluster_running_nodes fact
  ansible.builtin.set_fact:
    rabbitmq_cluster_status: "{{ rabbitmq_cluster_status.stdout | from_json }}"
  run_once: true

- name: Task block to clear new nodes before joining to cluster
  when:
    - ansible_nodename != groups[cluster_group_name][0]
    - (rabbitmq_node not in rabbitmq_cluster_status['running_nodes']) or (rabbitmq_clustering_force)
  vars:
    rabbitmq_node: "rabbit@{{ ansible_nodename }}"
  block:
    - name: Stop rabbitmq app
      ansible.builtin.command: rabbitmqctl stop_app
      changed_when: false

    - name: Reset rabbitmq before entering cluster
      ansible.builtin.command: rabbitmqctl force_reset
      changed_when: false

    - name: Force forget cluster node on 'master'
      ansible.builtin.command: "rabbitmqctl forget_cluster_node {{ rabbitmq_node }}"
      delegate_to: "{{ groups[cluster_group_name][0] }}"
      when: rabbitmq_node in rabbitmq_cluster_status['running_nodes']
      changed_when: false

    - name: Waiting for a while to nodes stabilize themselves
      ansible.builtin.wait_for:
        timeout: 15

    - name: Join rabbitmq cluster
      ansible.builtin.command: rabbitmqctl join_cluster "rabbit@{{ groups[cluster_group_name][0] }}"
      register: cluster_joined
      retries: 3
      delay: 15
      changed_when: false

    - name: Start rabbitmq app
      ansible.builtin.command: rabbitmqctl start_app
      changed_when: false

- name: Set rabbitmq cluster name
  community.rabbitmq.rabbitmq_global_parameter:
    name: cluster_name
    value: "{{ rabbitmq_clustering_cluster_name | to_json }}"
    state: present
  run_once: true
